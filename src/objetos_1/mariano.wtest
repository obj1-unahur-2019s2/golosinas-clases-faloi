import golosinas.*
import mariano.*

describe "tests de mariano" {
	const chocolatin = new Chocolatin()
	const caramelo = new Caramelo()
	const bombon = new Bombon()
	
	fixture {
		chocolatin.pesoInicial(100)
		mariano.comprar(chocolatin)
		mariano.comprar(caramelo)
		mariano.comprar(bombon)
	}

	test "test comprar" {
		assert.equals(3, mariano.golosinas().size())
		assert.that(mariano.golosinas().contains(chocolatin))
		assert.that(mariano.golosinas().contains(caramelo))
		assert.that(mariano.golosinas().contains(bombon))
		assert.notThat(mariano.golosinas().contains(new Chupetin()))
	}
	
	test "probar golosinas" {
		mariano.probarGolosinas()
		assert.equals(98, chocolatin.peso())
		assert.equals(4, caramelo.peso())
		assert.equals(11, bombon.peso())
	}
	
	test "golosinas sin tacc" {
		assert.that(mariano.hayGolosinaSinTACC())

		mariano.desechar(caramelo)
		mariano.desechar(bombon)		
		assert.notThat(mariano.hayGolosinaSinTACC())
	}
	
	test "precios cuidados" {
		assert.notThat(mariano.preciosCuidados())
		
		mariano.desechar(chocolatin)
		assert.that(mariano.preciosCuidados())
	}
	
	test "golosina de sabor" {
		assert.equals(chocolatin, mariano.golosinaDeSabor("chocolate"))
	}
	
	test "golosinas de sabor" {
		assert.equals([caramelo, bombon] , mariano.golosinasDeSabor("frutilla"))
		assert.equals([chocolatin] , mariano.golosinasDeSabor("chocolate"))
		assert.equals([] , mariano.golosinasDeSabor("naranja"))
	}
	
	test "sabores" {
		assert.equals(#{"chocolate", "frutilla"}, mariano.sabores())
	}
	
	test "la m√°s cara" {
		assert.equals(chocolatin, mariano.golosinaMasCara())
	}
	
	test "peso" {
		assert.equals(120, mariano.pesoGolosinas())
	}
}

